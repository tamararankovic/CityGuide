package sbnz.app.cep;

import sbnz.app.model.*;
import sbnz.app.fact.*;
import sbnz.app.fact.event.*;

import java.util.Date;
import java.util.List;

rule "promotion successful if there have been at least 4 ratings (predominantly likes) during or 24h after promotion"
timer (expr: 60*1000 + $duration)
//timer (expr: 24*60*60*1000 + $duration)
	when
		$p : Promotion(processed == false, $locationId : location.id, $l : location, $duration : duration)
		accumulate(RatingCreated(location.id == $locationId && $type: type && $rating: this &&
								(this during $p || this after [ 0h, 24h ] $p)),
							$likes: sum($type == RatingType.LIKE ? 1 : 0),
							$total: count($rating))
		eval($total >= 4)
		eval($likes > $total - $likes)
	then
		System.out.println("Promotion for location with name: " + $l.getName() + " has been successful");
		$p.setType(PromotionEvalType.SUCCESSFUL);
		$p.setProcessed(true);
		update($p);
end

rule "declare promotion unsuccessful if no other rule can be activated"
timer (expr: 60*1000 + $duration)
//timer (expr: 24*60*60*1000 + $duration)
salience -1
	when
		$p : Promotion(processed == false, $l : location, $duration : duration)
	then
		System.out.println("Promotion for location with name: " + $l.getName() + " has been unsuccessful");
		$p.setType(PromotionEvalType.UNSUCCESSFUL);
		$p.setProcessed(true);
		update($p);
end